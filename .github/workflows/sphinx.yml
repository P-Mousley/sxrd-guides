name: Sphinx build and deploy

on:
  push:
    branches:
      - main
permissions: read-all

jobs:
  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read
  #     packages: read
  #     # To report GitHub Actions status checks
  #     statuses: write

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         # super-linter needs the full git history to get the
  #         # list of files that changed across commits
  #         fetch-depth: 0

  #     - name: Super-linter
  #       uses: super-linter/super-linter@v7.4.0 # x-release-please-version
  #       env:
  #         # To report GitHub Actions status checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         VALIDATE_JUPYTER_NBQA_BLACK: true	 
  #         VALIDATE_JUPYTER_NBQA_ISORT: true
  #         VALIDATE_JUPYTER_NBQA_RUFF: true	 
  #         VALIDATE_PYTHON_BLACK: true	 
  #         VALIDATE_PYTHON_ISORT: true
  #         VALIDATE_PYTHON_RUFF: true
  

  # auto-fix:
  #   name: Auto-fix Python and Create _linted Branch
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   if: always() && needs.lint.result == 'failure'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         # super-linter needs the full git history to get the
  #         # list of files that changed across commits
  #         fetch-depth: 0
  #     - name: Load Super-Linter environment variables
  #       run: grep -v '^#' .github/super-linter-fix.env >> "$GITHUB_ENV"

  #     - name: Super-linter
  #       uses: super-linter/super-linter@v7.4.0 # x-release-please-version
  #       env:
  #         # To report GitHub Actions status checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  #     - name: Create and push _linted branch
  #       run: |
  #         git config --global user.email "github-actions[bot]@users.noreply.github.com"
  #         git config --global user.name "github-actions[bot]"
  #         BRANCH="${GITHUB_REF##*/}_autolinted"
  #         git checkout -b "$BRANCH"
  #         git add .
  #         git commit -m "chore: auto-fix linting issues"
  #         git push origin "$BRANCH" 
              
  build-deploy:
    runs-on: ubuntu-latest
    # needs: lint
    # if: needs.lint.result == 'success'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Install Pandoc
        run: sudo apt-get update && sudo apt-get install -y pandoc

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build HTML
        run: |
          sphinx-build -b html docs docs/_build/html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.REPO_GITHUB_TOKEN}}
          publish_dir: docs/_build/html
          publish_branch: gh-pages
